{"version":3,"sources":["components/input.js","utils/rgb-to-hex.js","utils/hex-to-rgb.js","utils/avg-color.js","utils/tint-shade.js","utils/antd-color-palette.js","utils/index.js","utils/gradientor.js","utils/brightness.js","App.js","index.js"],"names":["useInputValue","initiateValue","setOr","_useState","useState","_useState2","Object","slicedToArray","value","setValue","_useState3","_useState4","disabled","setDisabled","onChange","useCallback","e","target","rgbChannelToHex","channel","hex","toString","length","concat","rgbArrayToHex","color","r","g","b","rgbArrayFromHex","rgb","result","exec","hexArray","parseInt","rgbObjectFromHex","hexFromRgbArray","startArr","endArr","factor","Math","round","avgMix","startRgbArr","endRgbArr","granularity","colors","i","len","push","tintShade","Number","mid","mixWithWhite","slice","mixWithBlack","toConsumableArray","lightColorCount","getHue","hsv","isLight","hue","h","getSaturation","saturation","s","getValue","v","colorPalette","index","num","TinyColor","toHsv","toRgb","antdColorPatette","arr","uniques","itemsFound","l","stringified","JSON","stringify","multiDimensionalUnique","utils","toHex","gradientor","start_color","end_color","res","type","arguments","undefined","map","brightness","c","ViEWHEIGHT","MAX","MIN","App","startInputHook","endInputHook","stepInputHook","radiosHook","setColors","filterStartInputHook","isColor","test","useEffect","ColorHelper","styles","backgroundColor","height","lineHeight","react_default","a","createElement","className","key","assign","id","name","checked","htmlFor","min","max","Date","now","style","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e1c7100d.chunk.js","sourcesContent":["import { useState, useCallback } from \"react\";\n\nexport default function useInputValue(initiateValue, setOr) {\n    const [value, setValue] = useState(initiateValue);\n    const [disabled, setDisabled] =  useState(false);\n    let onChange = useCallback(e => setValue(e.target.value), []);\n    if(setOr) return { value, onChange, disabled, setDisabled, setValue };\n    else return { value, onChange, disabled };\n    \n}","function rgbChannelToHex (channel) {\n    const hex = channel.toString(16);\n    return hex.length === 1 ? `0${hex}` : hex;\n}\n\nfunction rgbToHex (r, g, b) {\n    return `#${rgbChannelToHex(r)}${rgbChannelToHex(g)}${rgbChannelToHex(b)}`;\n}\n\nfunction rgbArrayToHex (color) {\n    return rgbToHex(color[0], color[1], color[2]);\n}\n\nexport default function toHex(color) {\n    return rgbArrayToHex(color);\n}","const hexArray = hex => /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\nconst rgbObjectFromHex = hex => {\n    var result = hexArray(hex)\n    return result ? {\n        r: parseInt(result[1], 16),\n        g: parseInt(result[2], 16),\n        b: parseInt(result[3], 16),\n    } : null;\n}\nconst rgbArrayFromHex = hex => {\n    const rgb = rgbObjectFromHex(hex);\n    return [rgb.r, rgb.g, rgb.b];\n}\n\nexport default rgbArrayFromHex;","function hexFromRgbArray(startArr, endArr, factor) {\n    return [\n        Math.round((startArr[0] + ((endArr[0] - startArr[0]) * factor))),\n        Math.round((startArr[1] + ((endArr[1] - startArr[1]) * factor))),\n        Math.round((startArr[2] + ((endArr[2] - startArr[2]) * factor)))\n    ]\n}\nfunction avgMix (startRgbArr, endRgbArr, granularity) {\n    const colors = [];\n    const factor = 1 / (granularity + 1);\n    for(let i = 0, len = granularity + 2;i < len; i++) {\n        colors.push(\n            hexFromRgbArray(startRgbArr, endRgbArr, factor * i)\n        );\n    }\n    return colors;\n}\nexport default avgMix;\n\n","import avgMix from './avg-color';\nfunction tintShade(color, granularity) {\n    granularity = Number(granularity);\n    const mid = Math.round(granularity/2);\n    const mixWithWhite = granularity % 2 === 0 \n        ? avgMix([255, 255, 255], color, mid).slice(1, mid+1)\n        : avgMix([255, 255, 255], color, mid).slice(1, mid);\n    const mixWithBlack = granularity % 2 === 0 \n        ? avgMix(color, [0, 0, 0], mid).slice(1, mid+1)\n        : avgMix(color, [0, 0, 0], mid).slice(0, mid);\n    \n    return [...mixWithWhite, ...mixWithBlack];\n    \n}\n\nexport default tintShade;","import { TinyColor } from '@ctrl/tinycolor';\n\nconst hueStep = 2;\nconst saturationStep = 16;\nconst saturationStep2 = 5;\nconst brightnessStep1 = 5;\nconst brightnessStep2 = 15;\nconst lightColorCount = 5;\nconst darkColorCount = 4;\n\nconst getHue = function (hsv, i, isLight) {\n    let hue;\n    if (hsv.h >= 60 && hsv.h <= 240) {\n        hue = isLight ? hsv.h - hueStep * i : hsv.h + hueStep * i;\n    } else {\n        hue = isLight ? hsv.h + hueStep * i : hsv.h - hueStep * i;\n    }\n    if (hue < 0) {\n        hue += 360;\n    } else if (hue >= 360) {\n        hue -= 360;\n    }\n    return Math.round(hue);\n};\nconst getSaturation = function (hsv, i, isLight) {\n    let saturation;\n    if (isLight) {\n        saturation = Math.round(hsv.s * 100) - saturationStep * i;\n    } else if (i === darkColorCount) {\n        saturation = Math.round(hsv.s * 100) + saturationStep;\n    } else {\n        saturation = Math.round(hsv.s * 100) + saturationStep2 * i;\n    }\n    if (saturation > 100) {\n        saturation = 100;\n    }\n    if (isLight && i === lightColorCount && saturation > 10) {\n        saturation = 10;\n    }\n    if (saturation < 6) {\n        saturation = 6;\n    }\n    return Math.round(saturation);\n};\nconst getValue = function (hsv, i, isLight) {\n    if (isLight) {\n        return Math.round(hsv.v * 100) + brightnessStep1 * i;\n    }\n    return Math.round(hsv.v * 100) - brightnessStep2 * i;\n};\n\nfunction colorPalette(color, index, num) {\n    const isLight = index <= num;\n    const hsv = new TinyColor({ r: color[0], g: color[1], b: color[2] }).toHsv();\n    const i = isLight ? lightColorCount + 1 - index : index - lightColorCount - 1;\n    const result = {\n        h: getHue(hsv, i, isLight),\n        s: getSaturation(hsv, i, isLight),\n        v: getValue(hsv, i, isLight)\n    };\n    const rgb = new TinyColor(result).toRgb();\n    return [rgb.r, rgb.g, rgb.b]; \n\n};\n\nfunction multiDimensionalUnique(arr) {\n    const uniques = [];\n    const itemsFound = {};\n    for(let i = 0, l = arr.length; i < l; i++) {\n        const stringified = JSON.stringify(arr[i]);\n        if(itemsFound[stringified]) { continue; }\n        uniques.push(arr[i]);\n        itemsFound[stringified] = true;\n    }\n    return uniques;\n}\n\nfunction antdColorPatette(color, granularity) {\n    let colors = [];\n    for(let i = 1, len = granularity; i <= len; i++) {\n        colors.push(\n            colorPalette(color, i, Math.round((granularity)*0.6))\n        );\n    }\n    return multiDimensionalUnique(colors);\n}\n\nexport default antdColorPatette;","import toHex from './rgb-to-hex';\nimport gradientor from './gradientor';\nimport brightness from './brightness';\n\nexport default {\n    toHex,\n    gradientor,\n    brightness\n}","import rgbArrayFromHex from './hex-to-rgb';\nimport avgMix from './avg-color';\nimport tintShade from './tint-shade';\nimport antdColorPatette from './antd-color-palette';\n\n\nexport default function gradientor(start_color, end_color, granularity, type='avg') {\n    const startRgbArr = rgbArrayFromHex(start_color).map(Number);\n    const endRgbArr = rgbArrayFromHex(end_color).map(Number);\n    granularity = Number(granularity);\n    let res;\n    switch(type) {\n        case'avg':\n            res = avgMix(startRgbArr, endRgbArr, granularity);\n            break;\n        case 'antd':\n            res = antdColorPatette(endRgbArr, granularity);\n            break;\n        case 'tintshade':\n            res = tintShade(endRgbArr, granularity);\n            break;\n        default: break;\n    }\n    return res;\n}","export default function brightness(c) {\n    const color = ((c[0] * 299 + c[1] * 587 + c[2] * 114) / 1000) < 154 ? '#ffffff' : '#000000';\n    return color;\n}","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport useInputValue from './components/input';\nimport ColorHelper from './utils/index';\n\nconst ViEWHEIGHT = 800;\nconst MAX = 25;\nconst MIN = 1;\n\nfunction App() {\n  const startInputHook = useInputValue('#ffffff', true);\n  const endInputHook = useInputValue('#1890ff');\n  const stepInputHook = useInputValue(1);\n  const radiosHook = useInputValue('avg');\n  const [colors, setColors] = useState([]); \n\n  const filterStartInputHook = {\n    // 过滤掉非原生的props\n    value: startInputHook.value, \n    onChange: startInputHook.onChange, \n    disabled: startInputHook.disabled\n  };\n\n  const isColor = color => {\n    return color !== '000000'\n      && color !== '#000000'\n      && /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/.test(color);\n  }\n\n  useEffect(() => {\n    if(isColor(startInputHook.value) && isColor(endInputHook.value)) {\n      setColors(ColorHelper.gradientor(startInputHook.value, endInputHook.value, stepInputHook.value, radiosHook.value));\n    }\n  }, [startInputHook.value, endInputHook.value, stepInputHook.value, radiosHook.value]);\n\n  useEffect(() => {\n    if(radiosHook.value !== 'avg') {\n      startInputHook.setValue('#ffffff');\n      startInputHook.setDisabled(true);\n    } else {\n      startInputHook.setDisabled(false);\n    }\n  }, [radiosHook.value])\n\n\n  const styles = c => ({\n    backgroundColor: `rgb(${c})`,\n    color: ColorHelper.brightness(c),\n    height: ViEWHEIGHT/colors.length,\n    lineHeight: `${ViEWHEIGHT/colors.length}px`\n  })\n\n  const radios = ['avg', 'tintshade', 'antd'];\n\n\n  return (\n      <div className=\"App\">\n        <section className=\"controller\">\n          <div className=\"radios\">\n            <ul>\n              {\n                radios.map(r => (\n                  <li key={r}>\n                    <input type=\"radio\" id={r} name=\"selector\" {...radiosHook } value={r} checked={radiosHook.value === r} />\n                    <label htmlFor={r}>{r}</label>\n                    <div className=\"check\"></div>\n                </li>\n                ))\n              }\n            </ul>\n          </div>\n\n        \n          <div className=\"color-picker\">\n              <input type=\"color\" {...filterStartInputHook} disabled={startInputHook.disabled} />\n              <input type=\"text\" {...filterStartInputHook} disabled={startInputHook.disabled}/>\n          </div>\n          <div className=\"range\">\n            <input type=\"range\" min={MIN} max={MAX} {...stepInputHook} />\n            <p>Step：{stepInputHook.value}</p>\n          </div>\n          \n          \n          <div className=\"color-picker\">\n              <input type=\"color\" {...endInputHook} />\n              <input type=\"text\" {...endInputHook} />\n          </div>\n        </section>\n        <ul className=\"color-list\">\n          {\n            colors.map((c) => (\n              <li className=\"color-item\" key={Date.now() + c.toString()} style={styles(c)}>\n                {ColorHelper.toHex(c)}\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n  );\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}